How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    FC old-version.js new-version.js

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    When you are working on a project, you could want to see changes you did in time. History of files can provide this info to you so you can see the all changes you made throughout your project.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

	Especially working with groups your commits will be very useful to understand which changes made by whom and what is the content of changes. But if you use commit like writing a novel it might cause problem rather than easiness. Long sentences would increase size of commits and bore other participants who read  your commits.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Generally, coders work with multiple files instead of single file, because of that applying one line code change to all code pieces is very useful. 
    
How can you use the commands git log and git diff to view the history of files?

    >>git log >>git diff id1 id2
How might using version control make you more confident to make changes that
could break something?

    with ">>git checkout code-id" command you get a chance to return back and forward in your code. This feature gains flexibility to improve your code without hesitate to break previous version of your project.

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here
